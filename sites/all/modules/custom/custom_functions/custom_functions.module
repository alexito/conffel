<?php

function get_form_tarjeta_de_produccion() {
  global $user;
  module_load_include('inc', 'node', 'node.pages'); 
  $node_form = new stdClass;
  $node_form->type = 'tarjeta_de_produccion';
  $node_form->language = LANGUAGE_NONE;
  $node_form->uid = $user->uid;
  $node_form->status = 1;
  $node_form->revision = FALSE;
  $node_form->comment = 0;
  $node_form->promote = 0;
  $node_form->sticky = 0;
  $node_form->log = NULL;
  $form = drupal_get_form('tarjeta_de_produccion_node_form', $node_form);
  return drupal_render($form);
}

function custom_functions_form_alter(&$form, &$form_state, $form_id) {
$a = 0;
  if ($form_id != 'views_exposed_form' && isset($form['nid']) && $form['nid']['#value'] == null) {
    $form['title']['#default_value'] = 'nulo';
  }
  if($form_id == "tarjeta_de_produccion_node_form") {

    $view_rendered = '';
    if (isset($_GET['corte'])) {
      $corte = $_GET['corte'];
      $view = views_get_view('lista_de_cortes');
      $view->set_display('page_1');
      $view->set_arguments(array($corte));
      // change the amount of items to show
      $view->set_items_per_page(1);
      $view->pre_execute();
      $view->execute();
      $view_rendered = $view->render();


      //$form['title']['#default_value'] = $corte;
      $form['field_nodo_corte'][LANGUAGE_NONE]['#default_value'] = $corte;



      $tarjetas = get_t_producciones_del_corte($corte);
      $info = get_corte_values(NULL, NULL, $corte, $tarjetas);

      $tt = array();

      foreach ($info->tt as $tem_tt) {
        $faltan = $tem_tt->subtotal;
        if ($tarjetas != NULL) {
          $term_id = $tem_tt->talla_tid;
          $faltan = $tem_tt->subtotal - $tarjetas->tallas->$term_id;
        }

        $disabled = FALSE;
        $mensaje = '<code>Faltan:' . $faltan . '</code>';


        if ($faltan <= 0) {
          $disabled = TRUE;
          $mensaje = 'Esta talla esta <b>COMPLETA</b>';
        }
        $form['tt_' . $tem_tt->talla_tid] = array(
          '#attributes' => array(
            'data-max' => $faltan,
            'data-custom-num' => 1,
            'class' => array('field_talla')
          ),
          '#title' => t('Talla: ' . $tem_tt->talla . ' (' . $mensaje . ')'),
          '#type' => 'textfield',
          '#default_value' => $faltan,
          '#disabled' => $disabled,
          '#required' => TRUE,
          '#description' => 'Máximo ' . $faltan,
          '#weight' => 50,
        );
      }


    }

    $form['some_text'] = array(
      '#markup' => $view_rendered
    );


        
    $form['field_color']['#access'] = FALSE;
    $form['field_talla_y_cantidad']['#access'] = FALSE;
    //$form['field_nodo_corte']['#access'] = FALSE;
    
    $form['actions']['submit']['#submit'][] = 'custom_submit';
  }
}

function custom_submit($form, &$form_state){
  $form_state['redirect'] = 'imprimir-tarjeta-produccion/'. $form_state['nid']; 
}

function custom_functions_node_presave($node) {
  $a = 0;
  if($node->type == 'corte') {
    if ($node->is_new) {
      $node->title = get_new_id($node->type);
    }
  }
  if($node->type == 'tarjeta_de_produccion') {
    if ($node->is_new) {
      $node->title = get_new_id($node->type);
    }

    $cont = 0;
    
    $v = taxonomy_vocabulary_machine_name_load('tallas');
    $terms = taxonomy_get_tree($v->vid);
    foreach ($terms as $term) {
      $term_tid = 'tt_' . $term->tid;
      if(isset($node->$term_tid)) {
        if(intval($node->$term_tid) > 0) {

          //$field_collection_item->save();
          if($cont > 0) {
            $field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_fc_talla_y_cantidad'));
            $field_collection_item->setHostEntity('node', $node);

            $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][$cont] = $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][0];
            $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][$cont]['entity'] = $field_collection_item;
          }
          $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][$cont]['entity']->field_cantidad[LANGUAGE_NONE][0]['value'] = $node->$term_tid;
          $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][$cont]['entity']->field_talla[LANGUAGE_NONE][0]['tid'] = $term->tid;

          $cont++;
        }
      }      
    }
  }
}

// Obtiene el nuevo id para Corte/TProduccion
function get_new_id($tipo) {
  $query = new EntityFieldQuery();

  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $tipo)
    ->propertyCondition('status', 1)
    ->count()
    ->execute();

  $new_id = intval($result) + 1;

  return ($tipo == 'corte') ? 'C-' . $new_id : ($tipo == 'diario') ? 'D-' : 'T-' . $new_id;
}

function get_t_producciones_del_corte($nid){
  
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'tarjeta_de_produccion')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_nodo_corte', 'nid', $nid, '=')
    ->execute();
  
  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    $nodes = node_load_multiple($nids);
    
    $resp = new stdClass();
    $resp->tallas = new stdClass();

    $resp->tarjetas = array();
    foreach ($nodes as $node) {
      $resp->tarjetas[] = $node;

      foreach($node->field_fc_talla_y_cantidad[LANGUAGE_NONE] as $temp) {
        $fc = field_collection_item_load($temp['value']);
        $tid = $fc->field_talla[LANGUAGE_NONE][0]['tid'];
        if (!isset($resp->tallas->$tid)) {
          $resp->tallas->$tid = 0;
        }
        $resp->tallas->$tid = $resp->tallas->$tid + $fc->field_cantidad[LANGUAGE_NONE][0]['value'];
      }
    }

    return $resp;
  }
  
  return null;
}

function get_corte_values($data, $row, $nid = 0, $tarjetas = NULL){
  $resp = new stdClass();
  $resp->suma_total = 0;
  $resp->suma_faltan = 0;
  if($nid == 0){
    $node = node_load($data->nid);
    $tarjetas = get_t_producciones_del_corte($data->nid);
  } else {
    $node = node_load($nid);    
  }

  $i = 0;
  $resp->tt = array();
  $resp->html_tt = '<table><thead><tr><th>Talla</th><th>Cantidad</th><th>Faltan</th></tr></thead><tbody>';

  $items_tt = field_get_items('node', $node, 'field_tallas_y_cantidades');

  foreach ($items_tt as $item) {
    $fc = field_collection_field_get_entity($item);
    $term = taxonomy_term_load($fc->field_talla[LANGUAGE_NONE][0]['tid']);
    $resp->tt[$i] = new stdClass();
    $resp->tt[$i]->talla_tid = $term->tid;
    $resp->tt[$i]->talla = $term->name;
    $resp->tt[$i]->subtotal = ($fc->field_cantidad[LANGUAGE_NONE][0]['value']);
    
    $faltan = $resp->tt[$i]->subtotal;
    if($tarjetas != NULL){
      $term_id = $term->tid;
      $faltan = $resp->tt[$i]->subtotal - $tarjetas->tallas->$term_id;
    }
    
    $resp->html_tt .= '<tr><td>' . $resp->tt[$i]->talla .'</td><td>' . $resp->tt[$i]->subtotal . '</td><td>' .
            $faltan .'</td></tr>';
    
    $resp->suma_total = $resp->suma_total + ($resp->tt[$i]->subtotal);
    $resp->suma_faltan = $resp->suma_faltan + $faltan;
    $i++;
  }
  $resp->html_tt .= '</tbody><tfoot><tr><td>Total: </td><td>' . $resp->suma_total . '</td><td>' . $resp->suma_faltan . '</td></tr></tfoot></table>';
  
  if($tarjetas != NULL){
    $resp->html_tt .= '<span class="col-sm-12"><div style="font-size: 11px;"><b>Tarjetas de Producción: </b></div>';
    foreach ($tarjetas->tarjetas as $t ){
      $resp->html_tt .= '<a target="_blank" href="imprimir-tarjeta-produccion/' . $t->nid . '">' . $t->title . '</a>, ';
    }
    $resp->html_tt .= '</span>';
  }
  
  $resp->html_actions = getActionsLinks($node);
  
  $resp->user = user_load($node->uid);
  $resp->node = $node;
  $resp->modelo = taxonomy_term_load($node->field_modelo[LANGUAGE_NONE][0]['tid']);
  $resp->tela = taxonomy_term_load($node->field_tela[LANGUAGE_NONE][0]['tid']);
  return $resp;
}

function getActionsLinks($node){
  $resp = new stdClass();
  $resp->nueva_tarjeta_produccion =
    '<p><a href="node/add/tarjeta-de-produccion?corte=' . $node->nid . '" class="btn btn-success" target="_blank"> </a> Crear Tarjeta de Producción</p>' .
    '<p><a href="print/imprimir-corte/' . $node->nid . '" class="btn btn-info" target="_blank"> </a> Imprimir Corte</p>' .
    '<p><a href="node/' . $node->nid . '/edit?destination=inicio?nid=' . $node->nid . '" class="btn btn-danger"> </a> Editar Corte</p>';
  return $resp;
}



function softTrim($text, $count, $wrapText='...'){
    if(strlen($text)>$count){
        preg_match('/^.{0,' . $count . '}(?:.*?)\b/siu', $text, $matches);
        $text = $matches[0];
    }else{
        $wrapText = '';
    }
    return $text . $wrapText;
}

/**
 * Implement hook_menu
 */
 function custom_functions_menu(){
   $items['get-tarjeta-info/%node'] = array(
    'page callback' => '_custom_functions_get_tarjeta_info',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['imprimir-corte/%node'] = array(
    'page callback' => '_custom_functions_imprimir_corte',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['imprimir-tarjeta-produccion/%node'] = array(
    'page callback' => '_custom_functions_imprimir_tarjeta_produccion',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['imprimir-diario/%'] = array(
    'page callback' => '_custom_functions_imprimir_diario',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
 }
 
function _custom_functions_imprimir_diario($fecha){
  $output = new stdClass();
  $output->fecha = $fecha;
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'diario')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_fecha_diario', 'value', $fecha . '% %00', 'like')
    ->fieldOrderBy('field_modulo', 'tid', 'asc')
    ->execute();
  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    $output->nodes = node_load_multiple($nids);    
  }
    
   return theme('imprimir_diario', array('output' => $output));
 }
 
 function _custom_functions_imprimir_corte($node){   
   $output = get_corte_values(null, null, $node->nid, null);
   return theme('imprimir_corte', array('output' => $output));
 }
 
 function _custom_functions_imprimir_tarjeta_produccion($node){   
   $wrapper = entity_metadata_wrapper('node', $node);
   $node->cliente_nombre = $wrapper->field_cliente->name->value();
   $node->modelo_nombre = $wrapper->field_nodo_corte->field_modelo->name->value();
   //$node->color_nombre = $wrapper->field_color->name->value();

   $node->corte_fecha = date('Y-m-d', $wrapper->field_nodo_corte->created->value());

   $node->tela = $wrapper->field_nodo_corte->field_tela->value();
   $node->tela_nombre = '';
   foreach ($node->tela as $tela) {
     $node->tela_nombre .= $tela->name . ', ';
   }
   
   $corte = node_load($node->field_nodo_corte[LANGUAGE_NONE][0]['nid']);
   $user_corte = user_load($corte->uid);
   if(isset($user_corte->field_nombre_y_apellido[LANGUAGE_NONE][0])){
     $node->user_corte_nombre = $user_corte->field_nombre_y_apellido[LANGUAGE_NONE][0]['value'];
   }else{
     $node->user_corte_nombre = $corte->uid;
   }

   $tallas_cantidades = array();
   $cantidad_total = 0;
   $i = 0;
   foreach($node->field_fc_talla_y_cantidad[LANGUAGE_NONE] as $temp) {
     $fc = field_collection_item_load($temp['value']);
     $tid = $fc->field_talla[LANGUAGE_NONE][0]['tid'];

     $term = taxonomy_term_load($tid);

     $tallas_cantidades[$i] = new stdClass();
     $tallas_cantidades[$i]->talla = $term->name;
     $tallas_cantidades[$i++]->cantidad = $fc->field_cantidad[LANGUAGE_NONE][0]['value'];

     $cantidad_total = $cantidad_total + $fc->field_cantidad[LANGUAGE_NONE][0]['value'];

   }

   $node->tallas_cantidades = $tallas_cantidades;
   $node->cantidad_total = $cantidad_total;

   
   return theme('imprimir_tarjeta_produccion', array('output' => $node));
 }

function _custom_functions_get_tarjeta_info($node) {
  $data = new stdClass();
  $data->info = $node;
  return drupal_json_output($data);;
}