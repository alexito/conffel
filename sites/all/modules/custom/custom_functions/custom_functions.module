<?php

include_once 'simple_html_dom.php';

/**
 * Implement hook_menu
 */
function custom_functions_menu(){
  $items['get-tarjeta-info/%node/%'] = array(
    'page callback' => '_custom_functions_get_tarjeta_info',
    'page arguments' => array(1, 2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['imprimir-corte/%node'] = array(
    'page callback' => '_custom_functions_imprimir_corte',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['imprimir-tarjeta-produccion/%node'] = array(
    'page callback' => '_custom_functions_imprimir_tarjeta_produccion',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['imprimir-diario/%node'] = array(
    'page callback' => '_custom_functions_imprimir_diario',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_form_alter().
 */
function custom_functions_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'diario_node_form') {
    $form['#validate'][] = '_custom_functions_diario_validation';
    $form['actions']['submit']['#submit'][] = '_custom_functions_diario_redirect_submit';
  }
  if ($form_id != 'views_exposed_form' && isset($form['nid']) && $form['nid']['#value'] == null) {
    $form['title']['#default_value'] = 'nulo';
  }
  if($form_id == "tarjeta_de_produccion_node_form") {

    $view_rendered = '';
    if (isset($_GET['corte'])) {
      $corte = $_GET['corte'];
      $view = views_get_view('lista_de_cortes');
      $view->set_display('page_1');
      $view->set_arguments(array($corte));
      // change the amount of items to show
      $view->set_items_per_page(1);
      $view->pre_execute();
      $view->execute();
      $view_rendered = $view->render();


      //$form['title']['#default_value'] = $corte;
      $form['field_nodo_corte'][LANGUAGE_NONE]['#default_value'] = $corte;



      $tarjetas = get_t_producciones_del_corte($corte);
      $info = get_corte_values(NULL, NULL, $corte, $tarjetas);

      $tt = array();

      foreach ($info->tt as $tem_tt) {
        $faltan = $tem_tt->subtotal;
        if ($tarjetas != NULL) {
          $term_id = $tem_tt->talla_tid;
          $faltan = $tem_tt->subtotal - $tarjetas->tallas->$term_id;
        }

        $disabled = FALSE;
        $mensaje = '<code>Faltan:' . $faltan . '</code>';


        if ($faltan <= 0) {
          $disabled = TRUE;
          $mensaje = 'Esta talla esta <b>COMPLETA</b>';
        }
        $form['tt_' . $tem_tt->talla_tid] = array(
          '#attributes' => array(
            'data-max' => $faltan,
            'data-custom-num' => 1,
            'class' => array('field_talla')
          ),
          '#title' => t('Talla: ' . $tem_tt->talla . ' (' . $mensaje . ')'),
          '#type' => 'textfield',
          '#default_value' => $faltan,
          '#disabled' => $disabled,
          '#required' => TRUE,
          '#description' => 'Máximo ' . $faltan,
          '#weight' => 50,
        );
      }
    }

    $form['some_text'] = array(
      '#markup' => $view_rendered
    );

    $form['field_color']['#access'] = FALSE;
    $form['field_talla_y_cantidad']['#access'] = FALSE;
    
    $form['actions']['submit']['#submit'][] = '_custom_functions_tarjeta_redirect_submit';
  }
}

function _custom_functions_tarjeta_redirect_submit($form, &$form_state){
  $form_state['redirect'] = 'imprimir-tarjeta-produccion/'. $form_state['nid'];
}

function _custom_functions_diario_redirect_submit($form, &$form_state){
  $form_state['redirect'] = 'reporte/diario';
}

function _custom_functions_diario_validation($form, &$form_state) {

  if ($_GET['q'] == 'system/ajax') {
    return;
  }
  $categorias = array(
    'cnf' => 'confeccion',
    'prp' => 'preparacion',
    'trm' => 'terminado',
    'trm2' => 'terminado_2',
    'stm' => 'estampado',
    'brd' => 'bordado',
    'trn' => 'transfer',
    'cnt' => 'control_de_calidad',
    'mpq' => 'empaque'
  );

  foreach ($categorias as $key => $grupo) {

    $field_categoria = 'field_' . $key . '_modulos';

    foreach ($form_state['values'][$field_categoria][LANGUAGE_NONE] as $modulo) {

      if (is_array($modulo)) {
        foreach ($modulo['field_tarjetas'][LANGUAGE_NONE] as $tarjeta) {

          if (is_array($tarjeta)) {
            if ($tarjeta['field_tarjeta'][LANGUAGE_NONE][0]['nid'] != NULL) {

              $node = node_load($tarjeta['field_tarjeta'][LANGUAGE_NONE][0]['nid']);

              $llamada_ajax = FALSE;
              $data = _custom_functions_get_tarjeta_info($node, $grupo, $llamada_ajax);

              $uds = intval($tarjeta['field_uds'][LANGUAGE_NONE][0]['value']);
              $fallas = intval($tarjeta['field_fallas'][LANGUAGE_NONE][0]['value']);


              if (($uds + $fallas) > intval($data->restantes)) {
                form_set_error($field_categoria, 'Aviso: La suma total de UDS + Fallas no debe ser mayor al Máximo');
                return;
              }

              $save_tarjeta = FALSE;
              if ($fallas > 0) {
                $node->field_total_fallas[LANGUAGE_NONE][0]['value'] = intval($node->field_total_fallas[LANGUAGE_NONE][0]['value']) + $fallas;
                $node->field_total_prendas[LANGUAGE_NONE][0]['value'] = intval($node->field_total_prendas[LANGUAGE_NONE][0]['value']) - $fallas;
                //$node->field_total_faltantes[LANGUAGE_NONE][0]['value'] = $node->field_total_prendas[LANGUAGE_NONE][0]['value'];
                $save_tarjeta = TRUE;
              }
              if ($uds > 0 && $grupo == 'empaque') {
                $node->field_total_pagadas[LANGUAGE_NONE][0]['value'] = intval($node->field_total_pagadas[LANGUAGE_NONE][0]['value']) + $uds;
                $node->field_total_faltantes[LANGUAGE_NONE][0]['value'] = intval($node->field_total_prendas[LANGUAGE_NONE][0]['value']) - intval($node->field_total_pagadas[LANGUAGE_NONE][0]['value']);
                $node->field_tarjeta_min_prod[LANGUAGE_NONE][0]['value'] = floatval($node->field_total_pagadas[LANGUAGE_NONE][0]['value']) * floatval($node->field_total_sam[LANGUAGE_NONE][0]['value']);
                $save_tarjeta = TRUE;
              }

              if (($uds + $fallas) == intval($data->restantes)) {

                //Actualiza la tarjeta indicando la categoria que se ha completado
                if ($grupo == 'confeccion') {
                  $node->field_completado_confeccion[LANGUAGE_NONE][0]['value'] = TRUE;
                }
                else if ($grupo == 'preparacion') {
                  $node->field_completado_preparacion[LANGUAGE_NONE][0]['value'] = TRUE;
                }
                else if ($grupo == 'terminado') {
                  $node->field_completado_terminado[LANGUAGE_NONE][0]['value'] = TRUE;
                }
                else if ($grupo == 'terminado_2') {
                  $node->field_completado_terminado_2[LANGUAGE_NONE][0]['value'] = TRUE;
                }
                else if ($grupo == 'bordado') {
                  $node->field_completado_bordado[LANGUAGE_NONE][0]['value'] = TRUE;
                }
                else if ($grupo == 'estampado') {
                  $node->field_completado_estampado[LANGUAGE_NONE][0]['value'] = TRUE;
                }
                else if ($grupo == 'transfer') {
                  $node->field_completado_transfer[LANGUAGE_NONE][0]['value'] = TRUE;
                }
                else if ($grupo == 'control_de_calidad') {
                  $node->field_completado_control_calidad[LANGUAGE_NONE][0]['value'] = TRUE;
                }
                else if ($grupo == 'empaque') {
                  $node->field_completado_empaque[LANGUAGE_NONE][0]['value'] = TRUE;
                  $node->field_tarjeta_completa[LANGUAGE_NONE][0]['value'] = TRUE;
                }
                $save_tarjeta = TRUE;

              }

              if ($save_tarjeta) {
                node_save($node);
              }
            }
          }
        }
      }
    }
  }
}


function custom_functions_node_presave($node) {

  if($node->type == 'corte') {
    if ($node->is_new) {
      $node->title = get_new_id($node->type);
    }
  }
  if($node->type == 'extra') {
    $a = 0;
    if ($node->is_new) {
      $node->title = get_new_id($node->type);
    }
  }
  if($node->type == 'tarjeta_de_produccion') {
    if ($node->is_new) {
      $node->title = get_new_id($node->type);
    }

    $node->field_total_sam[LANGUAGE_NONE][0]['value'] = floatval($node->field_sam_preparacion[LANGUAGE_NONE][0]['value']) + floatval($node->field_sam_confeccion[LANGUAGE_NONE][0]['value']) + floatval($node->field_sam_terminado[LANGUAGE_NONE][0]['value']);

    $cont = 0;
    
    $v = taxonomy_vocabulary_machine_name_load('tallas');
    $terms = taxonomy_get_tree($v->vid);
    foreach ($terms as $term) {
      $term_tid = 'tt_' . $term->tid;
      if(isset($node->$term_tid)) {
        if(intval($node->$term_tid) > 0) {

          if($cont > 0) {
            $field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_fc_talla_y_cantidad'));
            $field_collection_item->setHostEntity('node', $node);

            $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][$cont] = $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][0];
            $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][$cont]['entity'] = $field_collection_item;
          }
          $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][$cont]['entity']->field_cantidad[LANGUAGE_NONE][0]['value'] = $node->$term_tid;
          $node->field_fc_talla_y_cantidad[LANGUAGE_NONE][$cont]['entity']->field_talla[LANGUAGE_NONE][0]['tid'] = $term->tid;

          $cont++;
        }
      }      
    }
  }
  if($node->type == 'diario') {
    if ($node->is_new) {
      $node->title = get_new_id($node->type);
    }
  }
}

// Obtiene el nuevo id para Corte/TProduccion
function get_new_id($tipo) {
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $tipo)
    ->propertyCondition('status', 1)
    ->count()
    ->execute();

  $new_id = intval($result) + 1;
  if ($tipo == "corte") {
    return 'C-' . $new_id;
  }
  else if ($tipo == "diario") {
    return 'D-' . $new_id;
  }
  else if ($tipo == "extra") {
    return 'E-' . $new_id;
  }
  else {
    return 'T-' . $new_id;
  }
}

function get_t_producciones_del_corte($nid){
  
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'tarjeta_de_produccion')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_nodo_corte', 'nid', $nid, '=')
    ->execute();
  
  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    $nodes = node_load_multiple($nids);
    
    $resp = new stdClass();
    $resp->tallas = new stdClass();

    $resp->tarjetas = array();
    foreach ($nodes as $node) {
      $resp->tarjetas[] = $node;

      foreach($node->field_fc_talla_y_cantidad[LANGUAGE_NONE] as $temp) {
        $fc = field_collection_item_load($temp['value']);
        $tid = $fc->field_talla[LANGUAGE_NONE][0]['tid'];
        if (!isset($resp->tallas->$tid)) {
          $resp->tallas->$tid = 0;
        }
        $resp->tallas->$tid = $resp->tallas->$tid + $fc->field_cantidad[LANGUAGE_NONE][0]['value'];
      }
    }

    return $resp;
  }
  
  return null;
}

function get_corte_values($data, $row, $nid = 0, $tarjetas = NULL){
  $resp = new stdClass();
  $resp->suma_total = 0;
  $resp->suma_faltan = 0;
  if($nid == 0){
    $node = node_load($data->nid);
    $tarjetas = get_t_producciones_del_corte($data->nid);
  } else {
    $node = node_load($nid);    
  }

  $i = 0;
  $resp->tt = array();
  $resp->html_tt = '<table><thead><tr><th>Talla</th><th>Cantidad</th><th>Faltan</th></tr></thead><tbody>';

  $items_tt = field_get_items('node', $node, 'field_tallas_y_cantidades');

  foreach ($items_tt as $item) {
    $fc = field_collection_field_get_entity($item);
    $term = taxonomy_term_load($fc->field_talla[LANGUAGE_NONE][0]['tid']);
    $resp->tt[$i] = new stdClass();
    $resp->tt[$i]->talla_tid = $term->tid;
    $resp->tt[$i]->talla = $term->name;
    $resp->tt[$i]->subtotal = ($fc->field_cantidad[LANGUAGE_NONE][0]['value']);
    
    $faltan = $resp->tt[$i]->subtotal;
    if($tarjetas != NULL){
      $term_id = $term->tid;
      $faltan = $resp->tt[$i]->subtotal - $tarjetas->tallas->$term_id;
    }
    
    $resp->html_tt .= '<tr><td>' . $resp->tt[$i]->talla .'</td><td>' . $resp->tt[$i]->subtotal . '</td><td>' .
            $faltan .'</td></tr>';
    
    $resp->suma_total = $resp->suma_total + ($resp->tt[$i]->subtotal);
    $resp->suma_faltan = $resp->suma_faltan + $faltan;
    $i++;
  }
  $resp->html_tt .= '</tbody><tfoot><tr><td>Total: </td><td>' . $resp->suma_total . '</td><td>' . $resp->suma_faltan . '</td></tr></tfoot></table>';
  
  if($tarjetas != NULL){
    $resp->html_tt .= '<span class="col-sm-12"><div style="font-size: 11px;"><b>Tarjetas de Producción: </b></div>';
    foreach ($tarjetas->tarjetas as $t ){
      $resp->html_tt .= '<a target="_blank" href="imprimir-tarjeta-produccion/' . $t->nid . '">' . $t->title . '</a>, ';
    }
    $resp->html_tt .= '</span>';
  }

  $resp->html_actions = getActionsLinks($node);
  if ($resp->suma_faltan == 0) {
    $resp->html_actions = getActionsLinks($node, FALSE);
  }

  
  $resp->user = user_load(intval($node->field_cortador[LANGUAGE_NONE][0]['uid']));
  $resp->node = $node;
  $resp->modelo = taxonomy_term_load($node->field_modelo[LANGUAGE_NONE][0]['tid']);
  $resp->tela = taxonomy_term_load($node->field_tela[LANGUAGE_NONE][0]['tid']);
  return $resp;
}

function getActionsLinks($node, $tarjeta = TRUE){
  global $user;

  $resp = new stdClass();
  $resp->nueva_tarjeta_produccion = '';
  if ($tarjeta) {
    if (in_array('Admin', $user->roles) || in_array('administrator', $user->roles)) {
      $resp->nueva_tarjeta_produccion .=
        '<p><a href="node/add/tarjeta-de-produccion?corte=' . $node->nid . '" class="btn btn-success"> </a> Crear Tarjeta de Producción</p>';
    }
  }
  else {
    $resp->nueva_tarjeta_produccion .=
      '<p><code>BLOQUEADA</code></p>';
  }

  $resp->nueva_tarjeta_produccion .=
    '<p><a href="print/imprimir-corte/' . $node->nid . '" class="btn btn-info" target="_blank"> </a> Imprimir Corte</p>' .
    '<p><a href="node/' . $node->nid . '/edit?destination=inicio?destination=inicio" class="btn btn-danger"> </a> Editar Corte</p>';
  return $resp;
}

 function _custom_functions_imprimir_corte($node){   
   $output = get_corte_values(null, null, $node->nid, null);
   return theme('imprimir_corte', array('output' => $output));
 }

function _custom_functions_imprimir_diario($node) {

}

 function _custom_functions_imprimir_tarjeta_produccion($node) {
   $wrapper = entity_metadata_wrapper('node', $node);
   $node->cliente_nombre = $wrapper->field_cliente->name->value();
   $node->modelo_nombre = $wrapper->field_nodo_corte->field_modelo->name->value();

   $node->corte_fecha = date('Y-m-d', $wrapper->field_nodo_corte->created->value());

   $node->tela = $wrapper->field_nodo_corte->field_tela->value();
   $node->tela_nombre = '';
   foreach ($node->tela as $tela) {
     $node->tela_nombre .= $tela->name . ', ';
   }

   $corte = node_load($node->field_nodo_corte[LANGUAGE_NONE][0]['nid']);
   $user_corte = user_load($corte->field_cortador[LANGUAGE_NONE][0]['uid']);
   if (isset($user_corte->field_nombre_y_apellido[LANGUAGE_NONE][0])) {
     $node->user_corte_nombre = $user_corte->field_nombre_y_apellido[LANGUAGE_NONE][0]['value'];
   }
   else {
     $node->user_corte_nombre = $corte->uid;
   }

   $tallas_cantidades = array();
   $cantidad_total = 0;
   $i = 0;
   foreach ($node->field_fc_talla_y_cantidad[LANGUAGE_NONE] as $temp) {
     $fc = field_collection_item_load($temp['value']);
     $tid = $fc->field_talla[LANGUAGE_NONE][0]['tid'];

     $term = taxonomy_term_load($tid);

     $tallas_cantidades[$i] = new stdClass();
     $tallas_cantidades[$i]->talla = $term->name;
     $tallas_cantidades[$i++]->cantidad = $fc->field_cantidad[LANGUAGE_NONE][0]['value'];

     $cantidad_total = $cantidad_total + $fc->field_cantidad[LANGUAGE_NONE][0]['value'];

   }

   $node->tallas_cantidades = $tallas_cantidades;
   $node->cantidad_total = $cantidad_total;


   return theme('imprimir_tarjeta_produccion', array('output' => $node));
 }

function _custom_functions_get_tarjeta_info($node, $grupo, $ajax = TRUE) {
  $data = new stdClass();
  $wrapper = entity_metadata_wrapper('node', $node);

  $data->total_prendas = intval($wrapper->field_total_prendas->value()) + intval($wrapper->field_total_fallas->value());

  $data->sam_confeccion = $wrapper->field_sam_confeccion->value();
  $data->sam_preparacion = $wrapper->field_sam_preparacion->value();
  $data->sam_terminado = $wrapper->field_sam_terminado->value();
  $data->sam_terminado_2 = $wrapper->field_sam_terminado_2->value();
  $data->sam_bordado = $wrapper->field_sam_bordado->value();
  $data->sam_estampado = $wrapper->field_sam_estampado->value();
  $data->sam_transfer = $wrapper->field_sam_transfer->value();
  $data->sam_control_de_calidad = $wrapper->field_sam_control_de_calidad->value();
  $data->sam_empaque = $wrapper->field_sam_empaque->value();

  $data->completado_confeccion = $wrapper->field_completado_confeccion->value();
  $data->completado_preparacion = $wrapper->field_completado_preparacion->value();
  $data->completado_terminado = $wrapper->field_completado_terminado->value();
  $data->completado_terminado_2 = $wrapper->field_completado_terminado_2->value();
  $data->completado_bordado = $wrapper->field_completado_bordado->value();
  $data->completado_estampado = $wrapper->field_completado_estampado->value();
  $data->completado_transfer = $wrapper->field_completado_transfer->value();
  $data->completado_control_de_calidad = $wrapper->field_completado_control_calidad->value();
  $data->completado_empaque = $wrapper->field_completado_empaque->value();

  $query = new EntityFieldQuery();
  $results = $query
    ->entityCondition('entity_type', 'field_collection_item')
    ->fieldCondition('field_tarjeta', 'nid', $node->nid, '=')
    ->fieldCondition('field_categoria', 'value', $grupo, '=')
    ->execute();

  $total_hechas = 0;
  $total_fallas = 0;

  if ($results) {
    $fci = $results['field_collection_item'];

    foreach ($fci as $key => $item) {
      $fc_tarjeta = field_collection_item_load($key);

      $total_hechas += intval($fc_tarjeta->field_uds[LANGUAGE_NONE][0]['value']);
      $total_hechas += intval($fc_tarjeta->field_fallas[LANGUAGE_NONE][0]['value']);
      $total_fallas += intval($fc_tarjeta->field_fallas[LANGUAGE_NONE][0]['value']);

      // $tem = field_collection_item_get_host_entity($fc_tarjeta);
      // $fc_modulo = field_collection_item_load($tem->item_id->value());
      // $tem = field_collection_item_get_host_entity($fc_modulo);
      // $diario = node_load($tem->nid->value());
    }
  }

  $data->total_hechas = $total_hechas;
  $data->total_fallas = $total_fallas;
  $data->restantes = intval($node->field_total_prendas[LANGUAGE_NONE][0]['value']) - $data->total_hechas + $total_fallas;

  $data->info = $node;

  if ($ajax) {
    return drupal_json_output($data);
  }
  else {
    return $data;
  }

}

function _custom_functions_save_user_rol_de_pagos($fc) {
  if (stripos($fc->field_name, 'modulos') !== FALSE && $fc->is_new) {
    foreach ($fc->field_operadores[LANGUAGE_NONE] as $field_operador) {

      $fc_id = $fc->item_id;
      $diario = $fc->hostEntity();;
      $fecha = $diario->field_fecha[LANGUAGE_NONE];
      //$temp = $fc->hostEntity();

      $fc_operador = field_collection_item_load($field_operador['value']);
      $uid = $fc_operador->field_operador[LANGUAGE_NONE][0]['uid'];
      $real_horas = $fc_operador->field_real_horas[LANGUAGE_NONE][0]['value'];
      $us = $fc_operador->field_us[LANGUAGE_NONE][0]['value'];

      $node = custom_functions_init_node('rol_de_pagos_operador');

      $node->field_diario[LANGUAGE_NONE][]['nid'] = $diario->nid;

      $node->field_operador[LANGUAGE_NONE][]['uid'] = $uid;
      $node->field_fecha[LANGUAGE_NONE][] = $fecha[0];
      $node->field_real_horas[LANGUAGE_NONE][]['value'] = $real_horas;
      $node->field_us[LANGUAGE_NONE][]['value'] = $us;

      foreach ($fc->field_tarjetas[LANGUAGE_NONE] as $field_tarjeta) {

        $fc_tarjeta = field_collection_item_load($field_tarjeta['value']);
        $node->field_rol_tarjeta[LANGUAGE_NONE][]['nid'] = $fc_tarjeta->field_tarjeta[LANGUAGE_NONE][0]['nid'];

        //$tarjeta = node_load($fc_tarjeta->field_tarjeta[LANGUAGE_NONE][0]['nid']);
        //$corte = node_load($tarjeta->field_nodo_corte[LANGUAGE_NONE][0]['nid']);
        //$modelo = taxonomy_term_load($corte->field_modelo[LANGUAGE_NONE][0]['tid']);

        $a = 0;

      }

      $node = node_submit($node); // Prepare node for saving
      node_save($node);
    }
  }
}

function custom_functions_init_node($type) {
  global $user;
  $node = new stdClass();
  $node->title = $type . '-' . time();
  $node->type = $type;
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;
  $node->uid = $user->uid;
  $node->status = 1;
  $node->promote = 0;
  $node->comment = 0;

  return $node;
}

function _custom_functions_get_reports_links() {
  return '<ul>
<li><a href="/reporte/diario">Diario</a></li>
<li><a href="/reporte/rol-de-pagos-operador">Rol de Pagos - Operador</a></li>
<li><a href="/reporte/rol-de-pagos-mensual">Rol de Pagos - Mensual</a></li>
<li><a href="/reporte/empleados">Lista de empleados</a></li>
<li><a href="/reporte/tarjeta-de-produccion">Lista de Tarjetas</a></li>
</ul>';
}

function _custom_functions_get_crear_links() {
  return '<ul>
<li><a href="/node/add/corte">Nuevo Corte</a></li>
<li><a href="/node/add/diario">Nuevo Diario</a></li>
<li><a href="/node/add/extra">Nuevo Extra</a></li>
</ul>';
}

function _custom_functions_get_extras($uid, $fecha) {
  $query = new EntityFieldQuery();
  $a = 0;
  $fecha = explode(' - ', $fecha);
  $fecha = explode('/', $fecha[0]);
  $anio = $fecha[2];
  $mes = $fecha[0];
  $fecha = $anio . '-' . $mes . '-01 00:00:00';

  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'extra')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_mes', 'value', $fecha, '=')
    ->fieldCondition('field_operador', 'uid', $uid, '=')
    ->execute();

  $extra = 0;

  if ($result){
    $nodes = node_load_multiple(array_keys($result['node']));
    foreach ($nodes as $node) {
      $extra = $extra + floatval($node->field_extra[LANGUAGE_NONE][0]['value']);
    }
  }

  return $extra;
}